
services:
  # Banco de dados MySQL
  appdb:
    image: mysql:8.4.0
    container_name: mysql_db_container_2
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: appdb
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      timeout: 10s
      retries: 5
    restart: always

  # Serviço RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5675:5675"  # Porta AMQP
      - "15675:15675"  # Porta da interface de gerenciamento
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: always    
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 3s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: ouro-gourmet-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://appdb:3306/appdb?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: appuser
      SPRING_DATASOURCE_PASSWORD: apppassword
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_DATASOURCE_INITIALIZATION_TIMEOUT: 30000
      SPRING_RABBITMQ_HOST: rabbitmq  # Comunicação interna via nome do serviço
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
    depends_on:
      appdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
    name: ouro_gourmet_mysql_data
    driver: local
  rabbitmq_data:

networks:
  app-network:
    driver: bridge
